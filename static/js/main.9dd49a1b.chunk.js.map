{"version":3,"sources":["recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","text","map","ingredient","Math","floor","src","App","useState","recipes","setrecipes","search","setsearch","query","setquery","useEffect","console","log","getrecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uRAkBeA,EAfA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAClC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,oBAAIF,UAAWC,IAAME,KAArB,SAA4BP,IAC5B,6BACKG,EAAYK,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWF,YAGxB,2CAAcG,KAAKC,MAAMV,GAAzB,UACA,qBAAKG,UAAWC,IAAMC,OAAQM,IAAKV,QCsChCW,EA/CH,WACV,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,QAAQC,IAAI,qBACZC,MACC,CAACL,IAEJ,IAAMK,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCP,EAApC,mBAbf,WAae,oBAZd,qCAWG,cACXQ,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBP,QAAQC,IAAIM,GACZb,EAAWa,EAAKC,MAJC,2CAAH,qDAiBhB,OACE,sBAAK1B,UAAU,MAAf,UACE,uBAAM2B,SARQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKmBd,UAAU,cAArC,UACE,uBAAO8B,SAbQ,SAACF,GACpBd,EAAUc,EAAEG,OAAOC,QAYgBA,MAAOnB,EAAQb,UAAU,aAAaiC,KAAK,OAAOC,YAAY,YAC7F,wBAAQlC,UAAU,gBAAgBiC,KAAK,SAAvC,uBAEF,+CACA,qBAAKjC,UAAU,UAAf,SACGW,EAAQP,KAAI,SAAAF,GAAM,OACjB,cAAC,EAAD,CAAkCN,MAAOM,EAAOA,OAAOiC,MAAOtC,SAAUK,EAAOA,OAAOL,SAAUC,MAAOI,EAAOA,OAAOJ,MACnHC,YAAaG,EAAOA,OAAOH,aADhBG,EAAOA,OAAOiC,gBC/BtBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,wB","file":"static/js/main.9dd49a1b.chunk.js","sourcesContent":["import React from 'react';\nimport style from './recipe.module.css'\n\nconst Recipe = ({title,calories,image,ingredients}) => {\n    return(\n        <div className={style.recipe}>\n            <h1 className={style.text}>{title}</h1>\n            <ul>\n                {ingredients.map(ingredient => (\n                    <li>{ingredient.text}</li>\n                ))}\n            </ul>\n            <p>Calories= {Math.floor(calories)} cal</p>\n            <img className={style.recipe} src={image}></img>\n        </div>\n    );\n}\n\nexport default Recipe;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Recipe from './recipe';\n\nconst App = () => {\n  const APP_ID = '9ae95148';\n  const APP_KEY = 'e062e7a5681ab5075b098c9aa0e47f5a';\n\n  const [recipes, setrecipes] = useState([]);\n  const [search, setsearch] = useState(\"\");\n  const [query, setquery] = useState(\"chicken\");\n\n  useEffect(() => {\n    console.log(\"useeffect has run\");\n    getrecipes();\n  }, [query]);\n\n  const getrecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    console.log(data);\n    setrecipes(data.hits);\n  }\n\n  const updateSearch = (e) => {\n    setsearch(e.target.value);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setquery(search);\n    setsearch(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input onChange={updateSearch} value={search} className=\"search-bar\" type=\"text\" placeholder=\"Chicken\"/>\n        <button className=\"search-button\" type=\"submit\">search</button>\n      </form>\n      <h2>Find a Recipe</h2>\n      <div className=\"recipes\">\n        {recipes.map(recipe =>\n          <Recipe key={recipe.recipe.label} title={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\",\"image\":\"recipe_image__BtdIE\",\"text\":\"recipe_text__1bcJv\"};"],"sourceRoot":""}